import java.io.File
import java.io.FilePermission
import java.util.Base64

interface IDictionary {
    fun add(word:String):Boolean
    fun find(word:String):Boolean
    fun size(): Int
    companion object{
       val DICTIONARY_NAME="C:/egyetem/4.ev/android/lab2_text.txt"
    }
}

object ListDictionary : IDictionary {

    private val words=mutableListOf <String>()

    init{
        File(IDictionary.DICTIONARY_NAME).forEachLine {add(it)} 
        }

    override fun add(word:String) =  words.add(word)
    override fun find(word:String) = words.find{it == word } !=null
    override fun size() = words.size
}

fun main(){
    val dict: IDictionary = ListDictionary
    println("Number of words: ${dict.size()}")
    var word: String?
    while(true){
        print("What to find? ")
        word = readLine()
        if( word.equals("quit")){
            break
            }
        println("Result: ${word?.let { dict.find(it) }}")
        }
}
